// eslint-disable
// ⚠️ DO NOT EDIT ⚠️
// This file is automatically generated, run yarn run generate to update

import { gql } from "@apollo/client";
export type Maybe<T> = T | null;
export type InputMaybe<T> = Maybe<T>;
export type Exact<T extends { [key: string]: unknown }> = {
  [K in keyof T]: T[K];
};
export type MakeOptional<T, K extends keyof T> = Omit<T, K> & {
  [SubKey in K]?: Maybe<T[SubKey]>;
};
export type MakeMaybe<T, K extends keyof T> = Omit<T, K> & {
  [SubKey in K]: Maybe<T[SubKey]>;
};
/** All built-in and custom scalars, mapped to their actual values */
export type Scalars = {
  ID: string;
  String: string;
  Boolean: boolean;
  Int: number;
  Float: number;
};

export type Book = {
  __typename?: "Book";
  author: Scalars["String"];
  coverUrl?: Maybe<Scalars["String"]>;
  okuUrl: Scalars["String"];
  readingDate?: Maybe<Scalars["String"]>;
  title: Scalars["String"];
};

export type NowPlaying = {
  __typename?: "NowPlaying";
  album?: Maybe<Scalars["String"]>;
  albumImageUrl?: Maybe<Scalars["String"]>;
  artist?: Maybe<Scalars["String"]>;
  isPlaying: Scalars["Boolean"];
  songUrl?: Maybe<Scalars["String"]>;
  title?: Maybe<Scalars["String"]>;
};

export type Playlist = {
  __typename?: "Playlist";
  coverUrl: Scalars["String"];
  spotifyUrl: Scalars["String"];
  title: Scalars["String"];
};

export type Query = {
  __typename?: "Query";
  favouriteBooks: Array<Maybe<Book>>;
  nowReading: Array<Maybe<Book>>;
  playlists: Array<Maybe<Playlist>>;
  recentlyRead: Array<Maybe<Book>>;
  spotifyNowPlaying: NowPlaying;
};

export type QueryFavouriteBooksArgs = {
  limit?: InputMaybe<Scalars["Int"]>;
};

export type QueryRecentlyReadArgs = {
  latest?: InputMaybe<Scalars["Int"]>;
};
