// eslint-disable
// ⚠️ DO NOT EDIT ⚠️
// This file is automatically generated, run yarn run generate to update

import { gql } from "@apollo/client";
export type Maybe<T> = T | null;
export type InputMaybe<T> = Maybe<T>;
export type Exact<T extends { [key: string]: unknown }> = {
  [K in keyof T]: T[K];
};
export type MakeOptional<T, K extends keyof T> = Omit<T, K> & {
  [SubKey in K]?: Maybe<T[SubKey]>;
};
export type MakeMaybe<T, K extends keyof T> = Omit<T, K> & {
  [SubKey in K]: Maybe<T[SubKey]>;
};
/** All built-in and custom scalars, mapped to their actual values */
export type Scalars = {
  ID: string;
  String: string;
  Boolean: boolean;
  Int: number;
  Float: number;
  JSON: any;
};

export type Asset = {
  __typename?: "Asset";
  contentType?: Maybe<Scalars["String"]>;
  contentfulMetadata: ContentfulMetadata;
  description?: Maybe<Scalars["String"]>;
  fileName?: Maybe<Scalars["String"]>;
  height?: Maybe<Scalars["Int"]>;
  size?: Maybe<Scalars["Int"]>;
  sys: Sys;
  title?: Maybe<Scalars["String"]>;
  url?: Maybe<Scalars["String"]>;
  width?: Maybe<Scalars["Int"]>;
};

export type AssetUrlArgs = {
  transform?: InputMaybe<ImageTransformOptions>;
};

export type Book = {
  __typename?: "Book";
  author: Scalars["String"];
  coverUrl?: Maybe<Scalars["String"]>;
  okuUrl: Scalars["String"];
  readingDate?: Maybe<Scalars["String"]>;
  title: Scalars["String"];
};

export type ContentfulMetadata = {
  __typename?: "ContentfulMetadata";
  tags: Array<Maybe<ContentfulTag>>;
};

export type ContentfulTag = {
  __typename?: "ContentfulTag";
  id?: Maybe<Scalars["String"]>;
  name?: Maybe<Scalars["String"]>;
};

export type Entry = {
  contentfulMetadata: ContentfulMetadata;
  sys: Sys;
};

export type Flag = {
  __typename?: "Flag";
  key: Scalars["String"];
  value: Scalars["String"];
};

export type ImageTransformOptions = {
  backgroundColor?: InputMaybe<Scalars["String"]>;
  cornerRadius?: InputMaybe<Scalars["Int"]>;
  format?: InputMaybe<Scalars["String"]>;
  height?: InputMaybe<Scalars["Int"]>;
  quality?: InputMaybe<Scalars["Int"]>;
  resizeFocus?: InputMaybe<Scalars["String"]>;
  resizeStrategy?: InputMaybe<Scalars["String"]>;
  width?: InputMaybe<Scalars["Int"]>;
};

export type Location = {
  __typename?: "Location";
  lat?: Maybe<Scalars["Float"]>;
  lon?: Maybe<Scalars["Float"]>;
};

export type NowPlaying = {
  __typename?: "NowPlaying";
  album?: Maybe<Scalars["String"]>;
  albumImageUrl?: Maybe<Scalars["String"]>;
  artist?: Maybe<Scalars["String"]>;
  isPlaying: Scalars["Boolean"];
  songUrl?: Maybe<Scalars["String"]>;
  title?: Maybe<Scalars["String"]>;
};

export type Photo = {
  __typename?: "Photo";
  camera?: Maybe<Scalars["String"]>;
  description?: Maybe<Scalars["String"]>;
  height: Scalars["Int"];
  lens?: Maybe<Scalars["String"]>;
  location?: Maybe<Location>;
  photoUrl: Scalars["String"];
  unsplashUrl?: Maybe<Scalars["String"]>;
  width: Scalars["Int"];
};

export type Playlist = {
  __typename?: "Playlist";
  coverUrl: Scalars["String"];
  spotifyUrl: Scalars["String"];
  title: Scalars["String"];
};

export type Post = {
  __typename?: "Post";
  body: PostBody;
  coverUrl?: Maybe<Scalars["String"]>;
  metaDescription?: Maybe<Scalars["String"]>;
  publishedDate: Scalars["String"];
  slug: Scalars["String"];
  tags?: Maybe<Array<Maybe<Scalars["String"]>>>;
  title: Scalars["String"];
};

export type PostBody = {
  __typename?: "PostBody";
  json: Scalars["JSON"];
  links: PostBodyLinks;
};

export type PostBodyAssets = {
  __typename?: "PostBodyAssets";
  block: Array<Maybe<Asset>>;
  hyperlink: Array<Maybe<Asset>>;
};

export type PostBodyEntries = {
  __typename?: "PostBodyEntries";
  block: Array<Maybe<Entry>>;
  hyperlink: Array<Maybe<Entry>>;
  inline: Array<Maybe<Entry>>;
};

export type PostBodyLinks = {
  __typename?: "PostBodyLinks";
  assets: PostBodyAssets;
  entries: PostBodyEntries;
};

export type PostWithoutBody = {
  __typename?: "PostWithoutBody";
  coverUrl?: Maybe<Scalars["String"]>;
  publishedDate: Scalars["String"];
  slug: Scalars["String"];
  title: Scalars["String"];
};

export type Query = {
  __typename?: "Query";
  favouriteBooks: Array<Maybe<Book>>;
  nowReading: Array<Maybe<Book>>;
  photos: Array<Maybe<Photo>>;
  playlists: Array<Maybe<Playlist>>;
  post?: Maybe<Post>;
  posts: Array<Maybe<PostWithoutBody>>;
  recentlyRead: Array<Maybe<Book>>;
  siteSettings?: Maybe<SiteSettings>;
  spotifyNowPlaying: NowPlaying;
};

export type QueryFavouriteBooksArgs = {
  limit?: InputMaybe<Scalars["Int"]>;
};

export type QueryPhotosArgs = {
  limit?: InputMaybe<Scalars["Int"]>;
};

export type QueryPostArgs = {
  slug: Scalars["String"];
};

export type QueryPostsArgs = {
  limit?: InputMaybe<Scalars["Int"]>;
};

export type QueryRecentlyReadArgs = {
  latest?: InputMaybe<Scalars["Int"]>;
};

export type SiteSettings = {
  __typename?: "SiteSettings";
  flags?: Maybe<Array<Maybe<Flag>>>;
  intro: Scalars["String"];
  metaDescription: Scalars["String"];
  siteTitle: Scalars["String"];
};

export type Sys = {
  __typename?: "Sys";
  environmentId: Scalars["String"];
  firstPublishedAt?: Maybe<Scalars["String"]>;
  id: Scalars["String"];
  publishedAt?: Maybe<Scalars["String"]>;
  publishedVersion?: Maybe<Scalars["Int"]>;
  spaceId: Scalars["String"];
};
